@using Microsoft.AspNetCore.Components.Routing
@using static Microsoft.AspNetCore.Components.Web.RenderMode

@rendermode InteractiveServer

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Cloud Native Estimation Helper</a>  
    </div>
</div>

<div class="nav-scrollable">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <a class="nav-link" href="">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </a>
        </div>
    
        <div class="nav-item px-3">
            <div class="nav-link d-flex align-items-center @(IsMenuExpanded("agentic") ? "active" : "")" @onclick="@(() => ToggleSubMenu("agentic"))" style="cursor: pointer;">
                <span class="bi bi-robot-nav-menu" aria-hidden="true"></span>
                <span style="flex-grow: 1;">Agentic AI</span>
                <span class="@GetChevronClass("agentic")"></span>
            </div>
            <div class="@GetSubMenuCssClass("agentic")">
                <div class="nav-item">
                    <a class="nav-link ps-3" href="/agentic/RAGAgent">
                        <span class="bi bi-database-fill-nav-menu" aria-hidden="true"></span> RAG Agent
                    </a>
                </div>
                <div class="nav-item">
                    <a class="nav-link ps-3" href="/agentic/MCPAgent">
                        <span class="bi bi-cpu-fill-nav-menu" aria-hidden="true"></span> MCP Enabled
                    </a>
                </div>
                <div class="nav-item">
                    <a class="nav-link ps-3" href="/agentic/chatbot">
                        <span class="bi bi-chat-square-text-fill-nav-menu" aria-hidden="true"></span> Chatbot
                    </a>
                </div>
            </div>
        </div>

        <div class="nav-item px-3">
            <div class="nav-link d-flex align-items-center @(IsMenuExpanded("microservices") ? "active" : "")" @onclick="@(() => ToggleSubMenu("microservices"))" style="cursor: pointer;">
                <span class="bi bi-diagram-3-nav-menu" aria-hidden="true"></span>
                <span style="flex-grow: 1;">Microservices</span>
                <span class="@GetChevronClass("microservices")"></span>
            </div>
            <div class="@GetSubMenuCssClass("microservices")">
                <div class="nav-item">
                    <a class="nav-link ps-3" href="/microservices/AKSArq">
                        <span class="bi bi-boxes-nav-menu" aria-hidden="true"></span> AKS Ms. Arch.
                    </a>
                </div>
            </div>
        </div>
        
        <div class="nav-item px-3">
            <div class="nav-link d-flex align-items-center @(IsMenuExpanded("github") ? "active" : "")" @onclick="@(() => ToggleSubMenu("github"))" style="cursor: pointer;">
                <span class="bi bi-github-nav-menu" aria-hidden="true"></span>
                <span style="flex-grow: 1;">GitHub</span>
                <span class="@GetChevronClass("github")"></span>
            </div>
            <div class="@GetSubMenuCssClass("github")">
                <div class="nav-item">
                    <a class="nav-link ps-3" href="/github/GHAS">
                        <span class="bi bi-shield-fill-check-nav-menu" aria-hidden="true"></span> GHAS
                    </a>
                </div>
            </div>
        </div>
        
        <div class="nav-item px-3">
            <div class="nav-link d-flex align-items-center @(IsMenuExpanded("devtools") ? "active" : "")" @onclick="@(() => ToggleSubMenu("devtools"))" style="cursor: pointer;">
                <span class="bi bi-tools-nav-menu" aria-hidden="true"></span>
                <span style="flex-grow: 1;">DevTools</span>
                <span class="@GetChevronClass("devtools")"></span>
            </div>
            <div class="@GetSubMenuCssClass("devtools")">
                <div class="nav-item">
                    <a class="nav-link ps-3" href="/devtools/devbox">
                        <span class="bi bi-pc-display-nav-menu" aria-hidden="true"></span> Azure DevBox
                    </a>
                </div>
                <div class="nav-item">
                    <a class="nav-link ps-3" href="/devtools/codespaces">
                        <span class="bi bi-code-square-nav-menu" aria-hidden="true"></span> GitHub Codespaces
                    </a>
                </div>
            </div>
        </div>        
        
        <div class="nav-item px-3">
            <a class="nav-link" href="/azureprices">
                <span class="bi bi-currency-dollar-nav-menu" aria-hidden="true"></span> Azure Prices and Settings
            </a>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private Dictionary<string, bool> expandedMenus = new();

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    
    private void ToggleSubMenu(string menu)
    {
        if (expandedMenus.ContainsKey(menu))
            expandedMenus[menu] = !expandedMenus[menu];
        else
            expandedMenus[menu] = true;
    }

    private string GetSubMenuCssClass(string menu)
    {
        return IsMenuExpanded(menu) ? "nav flex-column ms-3" : "nav flex-column ms-3 d-none";
    }

    private string GetChevronClass(string menu)
    {
        return IsMenuExpanded(menu) ? "bi bi-chevron-down" : "bi bi-chevron-right";
    }

    private bool IsMenuExpanded(string menu)
    {
        // Auto-expand if we're on a page within this section
        var uri = new Uri(NavigationManager.Uri);
        var path = uri.AbsolutePath.TrimEnd('/').ToLowerInvariant();

        // Auto-expand based on current URL
        if (path.StartsWith($"/{menu.ToLowerInvariant()}"))
        {
            if (!expandedMenus.ContainsKey(menu))
                expandedMenus[menu] = true;
            return true;
        }

        // Otherwise use the manual toggle state
        return expandedMenus.ContainsKey(menu) && expandedMenus[menu];
    }

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    protected override void OnInitialized()
    {
        // Subscribe to location changes to ensure menu state updates when navigating
        NavigationManager.LocationChanged += (sender, e) => StateHasChanged();
    }
}
